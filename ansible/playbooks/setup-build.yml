---
# Build system setup
# ansible-playbook -u $USER -v -l elixir-deploy-template playbooks/setup-build.yml -D

# - name: Bootstrap Python 2
#   hosts: debian-servers
#   gather_facts: false
#   become: true
#   pre_tasks:
#     - name: Install python 2
#       raw: test -e /usr/bin/python2 || (apt -y update && apt install -y python)

- name: Manage users
  hosts: '*'
  become: true
  roles:
    - cogini.users

- name: Install common
  hosts: '*'
  become: true
  gather_facts: true
  vars:
    tools_other_packages:
      # Useful utils
      # - ack
      # - htop
      # - psmisc
      # - wget
      # - vim-enhanced
      - tmux
      - git
  roles:
    - common-minimal
    - tools-other
    - iptables

#- name: Install postgresql
  #hosts: '*'
  #become: true
  #pre_tasks:
    #- name: Set db_pass
      #set_fact:
        #db_pass: "{{ lookup('password', '/tmp/db_pass.txt length=16') }}"
      #when: db_pass is not defined
  #roles:
    #- ANXS.postgresql

- name: Install asdf
  hosts: '*'
  become: true
  gather_facts: true
  vars:
    asdf_version: v0.4.3
    asdf_user: "{{ users_deploy_user }}"
    asdf_plugins:
      - name: erlang
      - name: elixir
      - name: nodejs
  vars_files:
    - "../vars/build-{{ ansible_os_family }}.yml"
    - "../vars/build-{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
  roles:
    - tools-other
    - asdf
  post_tasks:
    - name: Set vars
      set_fact:
        asdf_nodejs_keyring: "/home/{{ elixir_release_deploy_user }}/.asdf/keyrings/nodejs"

    - name: create keyring for Node.js keys
      file: path={{ asdf_nodejs_keyring }} state=directory owner={{ asdf_user }} group={{ asdf_user }} mode=0700

    - name: import Node.js keys to keyring
      command: "bash -lc '/home/{{ elixir_release_deploy_user }}/.asdf/plugins/nodejs/bin/import-release-team-keyring'"
      args:
        creates: "{{ asdf_nodejs_keyring }}/{{ gpg_pubring_file }}"
      become_user: "{{ asdf_user }}"
      environment:
        GNUPGHOME: "{{ asdf_nodejs_keyring }}"

- name: install yarn
  hosts: '*'
  become: true
  tasks:
    - name: Install YARN YUM repo.
      yum_repository:
        name: yarn
        description: Yarn Repository
        baseurl: "{{ yarn_rhel_repo_url }}"
        enabled: yes
        gpgcheck: yes
        gpgkey: "{{ yarn_rhel_repo_gpg_key_url }}"
        state: present

    #- name: Install NodeJS package for yarn dependency
      #package:
        #name: nodejs
        #state: latest

    - name: Install YARN package manager
      package: name=yarn state=latest


- name: prepare build directory
  hosts: '*'
  become: true
  become_user: "{{ users_deploy_user }}"
  tasks:
    - name: Create build dir
      file: path="{{ asdf_user_home }}" state=directory owner={{ users_deploy_user }} group={{ users_deploy_group }} mode=0755

- name: Setup app
  hosts: '*'
  gather_facts: true
  become: true
  tasks:
    - name: tell the host about our servers it might want to ssh to
      known_hosts:
        path: ~/.ssh/known_hosts
        name: "{{ item }}"
        key: "{{ lookup('pipe', 'ssh-keyscan -T 10 -H -t rsa ' + item) }}"
      with_items:
        - github.com

    - name: Check out project from git
      git:
        repo: "{{ app_repo }}"
        dest: "/home/{{ users_deploy_user }}/build/{{ elixir_release_name }}"
        version: "{{ app_git_version | default('HEAD') }}"
        force: yes
